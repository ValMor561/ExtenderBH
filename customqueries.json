{
    "queries": [
        {
            "name": "Find all Hass Session relationships",
            "category" : "Extender_BH",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=()-[r:HasSession]->() RETURN p"
                }
            ]
        },
        {
            "name": "Delete all Hass Session relationships",
            "category" : "Extender_BH",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH ()-[r:HasSession]-() DELETE r"
                }
            ]
        },
        {
            "name": "Find all owned",
            "category" : "Extender_BH",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (u) WHERE u.owned = True return u;"
                }
            ]
        },
		{
			"name": "Find All Path from owned Node to Domain Admin",
                        "category": "Extender_BH",
                        "queryList": [{
                                "final": false,
                                "title": "Select a Domain Admin group...",
                                "query": "MATCH (n:Group) WHERE n.name =~ $name RETURN n.name ORDER BY n.name DESC",
                                "props": {
                                    "name": "(?i).*DOMAIN ADMINS.*"
                                }
                            },
                            {
                                "final": true,
                                "query": "MATCH (n),(m:Group {name:$result}),p=allshortestPaths((n {owned:true})-[r:MemberOf|AdminTo|HasSession|Contains|GpLink|Owns|DCSync|AllExtendedRights|ForceChangePassword|GenericAll|GenericWrite|WriteDacl|WriteOwner*1..]->(m)) RETURN p",
                                "allowCollapse": true,
                                "endNode": "{}"
                            }
                        ]
		},
		{
			"name": "Find all path to a high value target from an owned object",
			"category": "Extender_BH",
			"queryList": [
				{
					"final": true,
					"query": "MATCH p=allshortestPaths((g {owned:true})-[*1..]->(n {highvalue:true})) WHERE  g<>n return p"
				}
			]
		},
        {
            "name": "Find all user with ClearTextPassword",
            "category" : "Extender_BH",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (u:User) WHERE u.ClearTextPassword IS NOT NULL return u;"
                }
            ]
        },
        {
            "name": "Find all computers with ClearTextPassword",
            "category" : "Extender_BH",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (c:Computer) WHERE c.ClearTextPassword IS NOT NULL return c;"
                }
            ]
        },
		{
            "name": "List all localadmin",
            "category" : "Extender_BH",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (u:User) WHERE u.LocalAdmin = True return u;"
                }
            ]
        },
        {
            "name": "List all users which admin to computer",
            "category" : "Extender_BH",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(n)-[b:AdminTo]->(c:Computer) RETURN p"
                }
            ]
        },
		{
            "name": "Find all user with PasswordMustBeChange",
            "category" : "Extender_BH",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (u:User) WHERE u.PasswordMustBeChange = True return u;"
                }
            ]
        },
        {
            "name": "Find all user with SharedPassword",
            "category" : "Extender_BH",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH p=(u1:User)-[r:SharePasswordWith]-(u2:User) return p"
                }
            ]
        },
		{
            "name": "All object which NTLMv2 we have",
            "category" : "Extender_BH",
            "queryList": [
                {
                    "final": true,
                    "query": "MATCH (n) WHERE n.NTLMv2_Count>0 return n;"
                }
            ]
        },
        {
            "name": "Find brutable service",
			"category": "Extender_BH",
			"queryList": [
				{
                    "final": true,
                    "query": "MATCH (n) WHERE n.BrutableService  return n;"
                }				
			]
        },
        {
            "name": "Find computers where WebDav service enabled",
			"category": "Extender_BH",
			"queryList": [
				{
                    "final": true,
                    "query": "MATCH (c:Computer) WHERE 'WebDav' IN c.Vuln RETURN c"
                }				
			]
        },
        {
            "name": "Find computers vulnerable for PrintNightmare",
			"category": "Extender_BH",
			"queryList": [
				{
                    "final": true,
                    "query": "MATCH (n) WHERE n.BrutableService  return n;"
                }				
			]
        }
    ]
}